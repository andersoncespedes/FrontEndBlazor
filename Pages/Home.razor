@page "/"
@using Radzen.Blazor
@using Radzen
@using FrontEndBlazor.Model
@inject DialogService dialogService
@inject HttpClient Http
<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>
<RadzenStack Orientation="Orientation.Horizontal" Wrap="FlexWrap.Wrap" JustifyContent="JustifyContent.Center"
    Class="rz-p-12" Gap="2rem">
    <RadzenButton ButtonStyle="ButtonStyle.Primary">
        Notifications
        <RadzenBadge Variant="Variant.Outlined" BadgeStyle="BadgeStyle.Light" Text="15" class="rz-ml-2" />
    </RadzenButton>

    <RadzenButton ButtonStyle="ButtonStyle.Secondary" Shade="Shade.Lighter" class="rz-shadow-0">
        Messages
        <RadzenBadge BadgeStyle="BadgeStyle.Secondary" IsPill="@true" Text="15" class="rz-ml-2" />
    </RadzenButton>

    <RadzenButton ButtonStyle="ButtonStyle.Dark" class="rz-border-radius-6 rz-shadow-6">
        Events
        <RadzenBadge BadgeStyle="BadgeStyle.Warning" Shade="Shade.Lighter" IsPill="@true" Text="15" class="rz-ml-2" />
    </RadzenButton>
</RadzenStack>
Welcome to your new app.
<div class="rz-p-12 rz-text-align-center">
    <RadzenButton Text="Dialog with clickable overlay" ButtonStyle="ButtonStyle.Secondary"
        Click=@ShowCloseableFromOverlayDialog />
</div>
<div class=" ">
<div class="row m-auto w-100 d-flex justify-content-center w-100">
  @foreach (var a in forecasts)
{
    <RadzenCard Variant="@variant" Class=" col-md-3 m-1">
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" Gap="1rem">
            <RadzenStack Gap="0">
                <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-2 rz-my-0 w-25">@a.Destination
                </RadzenText>
                <RadzenText TextStyle="TextStyle.Body1"><b>@a.Origin</b></RadzenText>
                <RadzenText TextStyle="TextStyle.Body1"><b>@a.Price</b></RadzenText>
            </RadzenStack>
        </RadzenStack>
    </RadzenCard>
}  
</div>
</div>


<div class="row m-5">
    <div class="col-md-4">
        <div class="card text-white bg-primary">
            <div class="card-header">
                <h2>Viajes</h2>
            </div>
            <div class="card-body">
                <h3 class="card-title">@dbCount.JourneyCount</h3>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-white bg-success">
            <div class="card-header">
                <h2>Vuelos</h2>
            </div>
            <div class="card-body">
                <h5 class="card-title">@dbCount.FlightCount</h5>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-white bg-info">
            <div class="card-header">
                <h2>Transportes</h2>
            </div>
            <div class="card-body">
                <h5 class="card-title">@dbCount.TransportCount</h5>
            </div>
        </div>
    </div>

</div>
@code {
    private DbCount dbCount;
    private List<Flight> forecasts;
    Variant variant = Variant.Filled;
    protected override async Task OnInitializedAsync()
    {
        dbCount = await Http.GetFromJsonAsync<DbCount>("http://localhost:3002/Journey/count");
        forecasts = await Http.GetFromJsonAsync<List<Flight>>("http://localhost:3002/Flights");

        Console.WriteLine(dbCount.TransportCount);
    }
    async Task ShowCloseableFromOverlayDialog()
    {
        Console.WriteLine("Hola");
        await dialogService.OpenAsync("Closeable from overlay Dialog", ds =>
    @<div>
        Click outside to close this Dialog
    </div>, new DialogOptions() { CloseDialogOnOverlayClick = true });
    }
    internal class DbCount
    {
        public int TransportCount { get; set; }
        public int JourneyCount { get; set; }
        public int FlightCount { get; set; }
    }
    private RadzenDataGrid<DbCount> grid;
}